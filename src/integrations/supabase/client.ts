
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://xjsjknmyocyihutrhsyg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inhqc2prbm15b2N5aWh1dHJoc3lnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIwODkyNzcsImV4cCI6MjA1NzY2NTI3N30.pHPCymZBzaiSYHoNlEjiGI1cbNmJNgMNu8Q7a7MNdMM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create storage buckets if they don't exist
async function createBucketsIfNotExist() {
  try {
    // Create company-assets bucket
    const { data: existingBuckets, error: bucketError } = await supabase.storage.listBuckets();
    
    if (bucketError) {
      console.error("Error checking existing buckets:", bucketError);
      return;
    }
    
    // Check if company-assets bucket exists
    const assetsExists = existingBuckets?.some(bucket => bucket.name === 'company-assets');
    
    if (!assetsExists) {
      const { error } = await supabase.storage.createBucket('company-assets', {
        public: true,
        fileSizeLimit: 5242880, // 5MB
      });
      
      if (error) {
        console.error("Error creating company-assets bucket:", error);
      } else {
        console.log("Created company-assets bucket");
      }
    }
  } catch (error) {
    console.error("Error setting up storage buckets:", error);
  }
}

// Initialize storage buckets
createBucketsIfNotExist();
