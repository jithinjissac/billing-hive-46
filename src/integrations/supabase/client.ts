
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://xjsjknmyocyihutrhsyg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inhqc2prbm15b2N5aWh1dHJoc3lnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIwODkyNzcsImV4cCI6MjA1NzY2NTI3N30.pHPCymZBzaiSYHoNlEjiGI1cbNmJNgMNu8Q7a7MNdMM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

/**
 * Creates a public storage bucket or ensures an existing one has public access
 * @param bucketName The name of the bucket to create or configure
 * @returns Promise with the result of the operation
 */
export const createPublicBucket = async (bucketName: string) => {
  try {
    // Call the Edge Function that will create/configure the bucket with public access
    const { data, error } = await supabase.functions.invoke('create-storage-bucket', {
      body: { bucketName }
    });
    
    if (error) {
      console.error('Error creating public bucket:', error);
      return { 
        error: true, 
        message: error.message || 'Failed to create storage bucket',
        partial: false
      };
    }
    
    return data || { 
      message: 'Bucket created/configured successfully', 
      partial: false 
    };
  } catch (error: any) {
    console.error('Exception creating public bucket:', error);
    return { 
      error: true, 
      message: error.message || 'Exception occurred while creating storage bucket',
      partial: true
    };
  }
};
